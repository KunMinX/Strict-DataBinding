/*
 * Copyright 2018-present KunMinX
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'

ext {
    PUBLISH_GROUP_ID = 'com.kunminx.arch'
    PUBLISH_ARTIFACT_ID = 'binding-adapter'
    PUBLISH_VERSION = '3.4.0-beta1'
    VERSION_CODE = 3040001

    ARTIFACT_DESCRIPTION = '透过独创的 DataBinding 严格模式，使 100% 彻底解决 “视图调用的一致性问题”，null 安全性与基于函数式编程思想的 Jetpack Compose 持平'

    POM_URL = 'https://github.com/KunMinX/Strict-DataBinding'
    POM_SCM_URL = 'https://github.com/KunMinX/Strict-DataBinding/tree/master'
    POM_SCM_CONNECTION = 'scm:git:github.com/KunMinX/Strict-DataBinding.git'
    POM_SCM_DEV_CONNECTION = 'scm:git:ssh://github.com/KunMinX/Strict-DataBinding.git'

    POM_DEVELOPER_ID = 'KunMinX'
    POM_DEVELOPER_NAME = 'KunMinX'
    POM_DEVELOPER_URL = 'https://github.com/KunMinX'
    POM_DEVELOPER_EMAIL = 'kunminx@gmail.com'

    LICENSE_NAME = 'The Apache Software License, Version 2.0'
    LICENSE_URL = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    uploadJavadocs = false
    uploadSources = false
}

apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"


android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.encoding = 'UTF-8'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.appcompat:appcompat:1.3.1'

}

